name: 构建可执行文件

on:
  push:
    tags:
      - 'v*'  # 当推送标签时触发
  workflow_dispatch:  # 手动触发

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        python-version: [3.9]

    steps:
    - uses: actions/checkout@v4
    
    - name: 设置 Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: 安装依赖
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: 构建 Windows 可执行文件
      if: matrix.os == 'windows-latest'
      run: |
        pyinstaller --onefile --windowed --name="数据分析系统" --icon=static/icon.ico --add-data="templates;templates" --add-data="static;static" --add-data="create_all_tables.sql;." --hidden-import=sqlite3 --hidden-import=flask --hidden-import=werkzeug --hidden-import=jinja2 --hidden-import=pandas --hidden-import=numpy --hidden-import=plotly start.py
    
    - name: 构建 macOS 可执行文件
      if: matrix.os == 'macos-latest'
      run: |
        pyinstaller --onefile --windowed --name="数据分析系统" --icon=static/icon.icns --add-data="templates:templates" --add-data="static:static" --add-data="create_all_tables.sql:." --hidden-import=sqlite3 --hidden-import=flask --hidden-import=werkzeug --hidden-import=jinja2 --hidden-import=pandas --hidden-import=numpy --hidden-import=plotly start.py
    
    - name: 构建 Linux 可执行文件
      if: matrix.os == 'ubuntu-latest'
      run: |
        pyinstaller --onefile --name="数据分析系统" --add-data="templates:templates" --add-data="static:static" --add-data="create_all_tables.sql:." --hidden-import=sqlite3 --hidden-import=flask --hidden-import=werkzeug --hidden-import=jinja2 --hidden-import=pandas --hidden-import=numpy --hidden-import=plotly start.py
    
    - name: 上传构建产物
      uses: actions/upload-artifact@v3
      with:
        name: 数据分析系统-${{ matrix.os }}
        path: |
          dist/*
          
  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: 下载所有构建产物
      uses: actions/download-artifact@v3
    
    - name: 创建发布
      uses: softprops/action-gh-release@v1
      with:
        files: |
          数据分析系统-windows-latest/*
          数据分析系统-macos-latest/*
          数据分析系统-ubuntu-latest/*
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 